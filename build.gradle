plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.asciidoctor.convert' version '1.5.6'
}

group = 'com.vaccinelife'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'junit:junit:4.13.1'
    implementation 'org.projectlombok:lombok:1.18.18'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.security:spring-security-test'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20210307'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.6.8'
    implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // 스웨거
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    compileOnly "org.springframework.boot:spring-boot-starter-data-jpa"
//	compileOnly "mysql:mysql-connector-java"

    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.0'


    // https://mvnrepository.com/artifact/org.asciidoctor/asciidoctor-gradle-plugin
//    implementation group: 'org.asciidoctor', name: 'asciidoctor-gradle-plugin', version: '1.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    runtimeOnly 'org.postgresql:postgresql'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.0'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    useJUnitPlatform()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'BOOT-INF/classes/static/docs'
    }
}
task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}